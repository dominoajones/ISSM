
% Mesh
figure(); % Create a new figure window
plotmodel(md,'data','mesh');
%%
% Inverted friction coefficient, modeled and observed velocities
figure(); 
plotmodel(md,'axis#all','tight','data',md.friction.coefficient,'caxis',[0 100],'title','inverted friction coeff',...
	'data',md.results.StressbalanceSolution.Vel,'title','modeled velocities', ...
    'data',md.initialization.vel,'title','observed velocities',...
    'data',(md.results.StressbalanceSolution.Vel-md.initialization.vel),'title','(modeled-observed) velocities',...
    'colorbar#all','on','colorbartitle#2-4','(m/yr)',...
	'caxis#2-3',([1.5,6000]),...
	'log#2-3',10);

plotmodel(md,'data',md.friction.coefficient,'title','fiction coefficient', ...
    'data',md.geometry.bed,'title','bed geometry')

plotmodel(md,'data', md.results.StressbalanceSolution.Gradient1);

plotmodel(md,'data','BC');


% Transient model solve
figure(); % Create yet another new figure window
plotmodel(md, ...
    'data', md.inversion.vel_obs,'title','Observed Velocity',...
    'data',md.results.TransientSolution(1).Vel,'title','Modeled Velocity (first)',...
    'data',md.results.TransientSolution(15).Vel,'title','Modeled Velocity (middle)',...
    'data',md.results.TransientSolution(19).Vel,'title','Modeled Velocity (last)',...
    'colorbar#all','on','colorbartitle#1-4','(m/yr)');
%%
%Transient model geometry

diff.thck=md.results.TransientSolution.Thickness;
diff.surf=md.results.TransientSolution.Surface;
    % 'data',md.geometry.surface,'title','Initial Surface',...
    % 'data',md.results.TransientSolution.Surface,'title','Model Surface', ...
    % 'data',(diff.surf-md.geometry.surface),'title','Model-Observed Surface',...
    % 'colorbar#all','on','colorbartitle#1-3','(m)',...
%% 
plotmodel(md,'axis#all','tight','data',md.geometry.thickness)

%%
	'data',md.results.TransientSolution.Thickness,'title','Model Thickness', ...
    'data',(diff.thck-md.geometry.thickness),'title','Model-Observed Thickness',...
	'caxis#1-3',([-5,2500]));
%%
%ice front
plotmodel(md,'data','icefront');

%%
plotmodel(md,'data',md.mask.ice_levelset,'title','ice/no-ice');
% Ice is present if md.mask.ice_levelset is negative
% There is no ice if md.mask.ice_levelset is positive
% The ice front lies where md.mask.ice_levelset equals zero

%%
plotmodel(md,'data','BC', ...
    'data',md.mask.ice_levelset,'title','ice/no-ice',...
     'edgecolor#all','w');
%plotmodel(md,'data',md.mask.ocean_levelset,'title','grounded ice');
% Ice is grounded if md.mask.ocean_levelset is positive
% Ice is floating if md.mask.ocean_levelset is negative
% The grounding line lies where md.mask.ocean_levelset equals zero
%save C:\Users\domjon\Desktop\ISSM_KNS\KNSGeometry md;

%%
plotmodel(md,'data',md.initialization.vel,'title','observed velocities',...
    'colorbar#1','on','colorbartitle#1','(m/yr)',...
	'caxis#1',([1.5,6000]),...
	'log#1',10);
%% 

plotmodel(new,'data',[new.inversion.vx_obs new.inversion.vy_obs],'autoscale','off')